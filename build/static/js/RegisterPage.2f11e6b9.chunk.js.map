{"version":3,"sources":["components/signupForm/SignupForm.js","pages/SignupPage.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["SignupForm","handleSubmit","btnName","useState","name","setName","email","setEmail","password","setPassword","onChange","e","target","type","value","onSubmit","preventDefault","autoComplete","placeholder","required","SignupPage","dispatch","useDispatch","userData","usersSignup","mainRoutes","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","unsupportedIterableToArray","TypeError"],"mappings":"uLAiEeA,EA/DI,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,QAClC,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAW,SAACC,GAChB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACL,SAATD,GAAmBR,EAAQS,GAClB,UAATD,GAAoBN,EAASO,GACpB,aAATD,GAAuBJ,EAAYK,IAcrC,OACE,uBAAMC,SANS,SAACJ,GAChBA,EAAEK,iBACFf,EAAa,CAAEG,OAAME,QAAOE,aAP5BH,EAAQ,IACRE,EAAS,IACTE,EAAY,KASZ,UACE,yCAEE,uBACEI,KAAK,OACLI,aAAa,MACbC,YAAY,eACZR,SAAUA,EACVI,MAAOV,EACPe,UAAQ,OAGZ,0CAEE,uBACEN,KAAK,QACLI,aAAa,MACbC,YAAY,eACZR,SAAUA,EACVI,MAAOR,EACPa,UAAQ,OAGZ,6CAEE,uBACEN,KAAK,WACLI,aAAa,MACbC,YAAY,eACZR,SAAUA,EACVI,MAAON,EACPW,UAAQ,OAGZ,wBAAQN,KAAK,SAAb,SAAuBX,Q,gBC5CdkB,UAVI,WACjB,IAAMC,EAAWC,cAIjB,OACE,cAAC,EAAD,CAAYrB,aAJO,SAACsB,GACpBF,EAASG,YAAYD,KAGmBrB,QAASuB,IAAW,GAAGrB,S,8ECRpD,SAASsB,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGzB,QAETc,GAAKM,EAAKU,SAAWhB,GAH8CO,GAAK,IAK9E,MAAOU,GACPT,GAAK,EACLC,EAAKQ,EACL,QACA,IACOV,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAkB,EAAA,GAA2BnB,EAAKC,IGLjF,WACb,MAAM,IAAImB,UAAU,6IHIgF","file":"static/js/RegisterPage.2f11e6b9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst SignupForm = ({ handleSubmit, btnName }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const onChange = (e) => {\r\n    const { type, value } = e.target;\r\n    type === \"text\" && setName(value);\r\n    type === \"email\" && setEmail(value);\r\n    type === \"password\" && setPassword(value);\r\n  };\r\n\r\n  const formReset = () => {\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleSubmit({ name, email, password });\r\n    formReset();\r\n  };\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <label>\r\n        name\r\n        <input\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          placeholder=\"type here...\"\r\n          onChange={onChange}\r\n          value={name}\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        email\r\n        <input\r\n          type=\"email\"\r\n          autoComplete=\"off\"\r\n          placeholder=\"type here...\"\r\n          onChange={onChange}\r\n          value={email}\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        password\r\n        <input\r\n          type=\"password\"\r\n          autoComplete=\"off\"\r\n          placeholder=\"type here...\"\r\n          onChange={onChange}\r\n          value={password}\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\">{btnName}</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport SignupForm from \"../components/signupForm/SignupForm\";\r\nimport { mainRoutes } from \"../routes/mainRoutes\";\r\nimport { usersSignup } from \"../redux/users/usersOperations\";\r\n\r\nconst SignupPage = () => {\r\n  const dispatch = useDispatch();\r\n  const handleSubmit = (userData) => {\r\n    dispatch(usersSignup(userData));\r\n  };\r\n  return (\r\n    <SignupForm handleSubmit={handleSubmit} btnName={mainRoutes[2].name} />\r\n  );\r\n};\r\n\r\nexport default SignupPage;\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}