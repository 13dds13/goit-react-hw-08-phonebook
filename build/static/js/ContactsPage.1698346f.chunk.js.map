{"version":3,"sources":["components/title/Title.js","redux/contacts/contactsOperations.js","redux/contacts/contactsSelectors.js","components/inputAndLabel/formInputAndLabel/FormInputAndLabelName.js","components/inputAndLabel/formInputAndLabel/FormInputAndLabelNumber.js","components/contactForm/ContactForm.js","components/inputAndLabel/FilterInputAndLabel.js","components/filter/Filter.js","components/notification/Notification.js","components/contactsList/contactsListItem/ContactsListItem.js","components/contactsList/ContactsList.js","pages/ContactsPage.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/title/Title.module.css","components/contactForm/ContactForm.module.css","components/filter/Filter.module.css","components/contactsList/ContactsList.module.css","components/container/Container.module.css"],"names":["Title","title","className","styles","removeContact","id","dispatch","removeContactRequest","axios","delete","BASE_URL","then","removeContactSuccess","catch","error","removeContactError","getFilter","state","contacts","filter","getContacts","items","getIsLoading","isLoading","getContactsData","createSelector","contactsToRender","FormInputAndLabelName","name","handleChange","inputNameId","inputLable","htmlFor","type","pattern","required","autoComplete","onChange","e","target","value","FormInputAndLabelNumber","number","inputNumberId","ContactForm","useDispatch","useSelector","useState","FORM_INITIAL_DATA","setState","useEffect","nanoid","data","prev","inputName","dataUI","inputTel","submitBtn","form","onSubmit","preventDefault","addContactRequest","post","res","addContactSuccess","addContactError","input","btn","disabled","FilterInputAndLabel","inputSearch","filterInputId","Filter","wrap","setFilter","Notification","ContactsListItem","contact","deleteBtn","listItem","onClick","ContactsList","noDataToRender","length","listWrap","map","titleMain","titleSecondary","isLoadingNow","ContactsPage","token","getToken","getContactsRequest","defaults","headers","common","contactsHandling","console","log","getContactsError","container","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","module","exports"],"mappings":"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","file":"static/js/ContactsPage.1698346f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Title.module.css\";\r\n\r\nconst Title = ({ title }) => {\r\n  return <h2 className={styles.title}>{title}</h2>;\r\n};\r\n\r\nTitle.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Title;\r\n","import {\r\n  getContactsRequest,\r\n  // getContactsSuccess,\r\n  getContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n} from \"./contactsActions\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL, contactsHandling } from \"../../data/db.json\";\r\n\r\nexport const getContacts = (token) => (dispatch) => {\r\n  dispatch(getContactsRequest());\r\n  axios.defaults.headers.common[\"Authorization\"] = token;\r\n  axios(BASE_URL + contactsHandling)\r\n    .then((res) => {\r\n      console.log(res);\r\n      // if (!data) return;\r\n      // const preparadedData = Object.keys(data).map((key) => ({\r\n      //   ...data[key],\r\n      //   id: key,\r\n      // }));\r\n      // dispatch(getContactsSuccess(preparadedData));\r\n    })\r\n    .catch((error) => dispatch(getContactsError(error)));\r\n};\r\n\r\nexport const addContact = (data) => (dispatch) => {\r\n  const isAlreadyInContacts = dispatch(addContactRequest(data));\r\n  if (isAlreadyInContacts) return;\r\n  axios\r\n    .post(`${BASE_URL}.json`, data)\r\n    .then((res) => {\r\n      const id = res.data.name;\r\n      dispatch(addContactSuccess({ ...data, id }));\r\n    })\r\n    .catch((error) => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const removeContact = (id) => (dispatch) => {\r\n  dispatch(removeContactRequest());\r\n\r\n  axios\r\n    .delete(`${BASE_URL}/${id}.json`)\r\n    .then(dispatch(removeContactSuccess(id)))\r\n    .catch((error) => dispatch(removeContactError(error)));\r\n};\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\nimport { contactsToRender } from \"../../service/contactsPrepations\";\r\n\r\nconst getFilter = (state) => state.contacts.filter;\r\nconst getContacts = (state) => state.contacts.items;\r\nconst getIsLoading = (state) => state.contacts.isLoading;\r\n\r\nconst getContactsData = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => contactsToRender(contacts, filter)\r\n);\r\n\r\nexport { getContacts, getFilter, getIsLoading, getContactsData };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FormInputAndLabelName = ({\r\n  name,\r\n  handleChange,\r\n  inputNameId,\r\n  className,\r\n  inputLable,\r\n}) => {\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    handleChange({ name, value });\r\n  };\r\n  return (\r\n    <>\r\n      <label htmlFor={inputNameId}>{inputLable}</label>\r\n      <input\r\n        className={className}\r\n        id={inputNameId}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        autoComplete=\"off\"\r\n        onChange={onChange}\r\n        value={name}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nFormInputAndLabelName.propTypes = {\r\n  name: PropTypes.string,\r\n  handleChange: PropTypes.func,\r\n  inputNameId: PropTypes.string,\r\n  className: PropTypes.string,\r\n  inputLable: PropTypes.string,\r\n};\r\n\r\nexport default FormInputAndLabelName;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FormInputAndLabelNumber = ({\r\n  number,\r\n  handleChange,\r\n  inputNumberId,\r\n  className,\r\n  inputLable,\r\n}) => {\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    handleChange({ name, value });\r\n  };\r\n  return (\r\n    <>\r\n      <label htmlFor={inputNumberId}>{inputLable}</label>\r\n      <input\r\n        className={className}\r\n        id={inputNumberId}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n        autoComplete=\"off\"\r\n        onChange={onChange}\r\n        value={number}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nFormInputAndLabelNumber.propTypes = {\r\n  number: PropTypes.string,\r\n  handleChange: PropTypes.func,\r\n  inputNumberId: PropTypes.string,\r\n  className: PropTypes.string,\r\n  inputLable: PropTypes.string,\r\n};\r\n\r\nexport default FormInputAndLabelNumber;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FORM_INITIAL_DATA } from \"../../data/initialData.json\";\r\nimport dataUI from \"../../data/dataUI.json\";\r\nimport { addContact } from \"../../redux/contacts/contactsOperations\";\r\nimport { form, btn, input } from \"./ContactForm.module.css\";\r\nimport { getContacts } from \"../../redux/contacts/contactsSelectors\";\r\nimport FormInputAndLabelName from \"../inputAndLabel/formInputAndLabel/FormInputAndLabelName\";\r\nimport FormInputAndLabelNumber from \"../inputAndLabel/formInputAndLabel/FormInputAndLabelNumber\";\r\n\r\nconst ContactForm = ({ isLoading }) => {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n  const [state, setState] = useState({ ...FORM_INITIAL_DATA });\r\n\r\n  useEffect(() => {\r\n    setState({ ...FORM_INITIAL_DATA });\r\n  }, [contacts]);\r\n\r\n  const { name, number } = state;\r\n\r\n  const inputNameId = nanoid();\r\n  const inputNumberId = nanoid();\r\n\r\n  const handleChange = (data) => {\r\n    const { name, value } = data;\r\n    setState((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addContact({ name, number }));\r\n  };\r\n\r\n  const { inputName, inputTel, submitBtn } = dataUI;\r\n\r\n  return (\r\n    <form className={form} onSubmit={handleSubmit}>\r\n      <FormInputAndLabelName\r\n        handleChange={handleChange}\r\n        name={name}\r\n        inputNameId={inputNameId}\r\n        inputLable={inputName}\r\n        className={input}\r\n      />\r\n      <FormInputAndLabelNumber\r\n        handleChange={handleChange}\r\n        number={number}\r\n        inputNumberId={inputNumberId}\r\n        inputLable={inputTel}\r\n        className={input}\r\n      />\r\n      <button className={btn} type=\"submit\" disabled={isLoading}>\r\n        {submitBtn}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  isLoading: PropTypes.bool,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FilterInputAndLabel = ({ filter, handleChange, inputSearch }) => {\r\n  const onChange = (e) => {\r\n    const { value } = e.target;\r\n    handleChange(value);\r\n  };\r\n  const filterInputId = nanoid();\r\n  return (\r\n    <>\r\n      <label htmlFor={filterInputId}>{inputSearch}</label>\r\n      <input\r\n        id={filterInputId}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        autoComplete=\"off\"\r\n        onChange={onChange}\r\n        value={filter}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nFilterInputAndLabel.propTypes = {\r\n  filter: PropTypes.string,\r\n  handleChange: PropTypes.func,\r\n  inputSearch: PropTypes.string,\r\n};\r\n\r\nexport default FilterInputAndLabel;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { inputSearch } from \"../../data/dataUI.json\";\r\nimport { wrap } from \"./Filter.module.css\";\r\nimport { setFilter } from \"../../redux/contacts/contactsActions\";\r\nimport { getFilter } from \"../../redux/contacts/contactsSelectors\";\r\nimport FilterInputAndLabel from \"../inputAndLabel/FilterInputAndLabel\";\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(getFilter);\r\n\r\n  const handleChange = (value) => {\r\n    dispatch(setFilter(value));\r\n  };\r\n\r\n  return (\r\n    <div className={wrap}>\r\n      <FilterInputAndLabel\r\n        filter={filter}\r\n        handleChange={handleChange}\r\n        inputSearch={inputSearch}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ title }) => {\r\n  return <p>{title}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactsListItem = ({ contact, removeContact, styles, deleteBtn }) => {\r\n  const dispatch = useDispatch();\r\n  const removeContactItem = () => dispatch(removeContact(contact.id));\r\n\r\n  const { listItem, name, number, btn } = styles;\r\n\r\n  return (\r\n    <li className={listItem}>\r\n      {\" \"}\r\n      <p className={name}>\r\n        {contact.name}: <span className={number}>{contact.number}</span>\r\n      </p>\r\n      <button className={btn} type=\"button\" onClick={removeContactItem}>\r\n        {deleteBtn}\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactsListItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n  }),\r\n  removeContact: PropTypes.func.isRequired,\r\n  styles: PropTypes.shape({\r\n    listItem: PropTypes.string,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    btn: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default ContactsListItem;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getContactsData } from \"../../redux/contacts/contactsSelectors\";\r\nimport dataUI from \"../../data/dataUI.json\";\r\nimport styles from \"./ContactsList.module.css\";\r\nimport ContactsListItem from \"./contactsListItem/ContactsListItem\";\r\nimport { removeContact } from \"../../redux/contacts/contactsOperations\";\r\nimport Notification from \"../notification/Notification\";\r\n\r\nconst ContactsList = () => {\r\n  const { title, contacts } = useSelector(getContactsData);\r\n  const { deleteBtn, noDataToRender } = dataUI;\r\n\r\n  return contacts.length ? (\r\n    <>\r\n      <Notification title={title} />\r\n      <ul className={styles.listWrap}>\r\n        {contacts.map((contact) => (\r\n          <ContactsListItem\r\n            contact={contact}\r\n            removeContact={removeContact}\r\n            styles={styles}\r\n            deleteBtn={deleteBtn}\r\n            key={contact.id}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  ) : (\r\n    <p>{noDataToRender}</p>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Title from \"../components/title/Title\";\r\nimport ContactForm from \"../components/contactForm/ContactForm\";\r\nimport Filter from \"../components/filter/Filter\";\r\nimport Notification from \"../components/notification/Notification\";\r\nimport ContactsList from \"../components/contactsList/ContactsList\";\r\nimport styles from \"../components/container/Container.module.css\";\r\nimport dataUI from \"../data/dataUI.json\";\r\nimport { getContacts } from \"../redux/contacts/contactsOperations\";\r\nimport { getIsLoading } from \"../redux/contacts/contactsSelectors\";\r\nimport { getToken } from \"../redux/users/usersSelectors\";\r\n\r\nconst { titleMain, titleSecondary, isLoadingNow } = dataUI;\r\n\r\nconst ContactsPage = () => {\r\n  const dispatch = useDispatch();\r\n  const token = useSelector(getToken);\r\n  const isLoading = useSelector(getIsLoading);\r\n\r\n  useEffect(() => {\r\n    dispatch(getContacts(token));\r\n  }, [dispatch, token]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Title title={titleMain} />\r\n      <ContactForm isLoading={isLoading} />\r\n      <Title title={titleSecondary} />\r\n      <Filter />\r\n      {isLoading ? <Notification title={isLoadingNow} /> : <ContactsList />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactsPage;\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__21ESg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1RCQQ\",\"btn\":\"ContactForm_btn__1nTcr\",\"input\":\"ContactForm_input__3zrct\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Filter_wrap__2AqgH\",\"listWrap\":\"Filter_listWrap__3SJcy\",\"listItem\":\"Filter_listItem__8Oony\",\"name\":\"Filter_name__2xe-v\",\"number\":\"Filter_number__1_2NO\",\"btn\":\"Filter_btn__2mDaS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listWrap\":\"ContactsList_listWrap__38M0B\",\"listItem\":\"ContactsList_listItem__1LlVu\",\"btn\":\"ContactsList_btn__37rfK\",\"name\":\"ContactsList_name__1j5hc\",\"number\":\"ContactsList_number__eHESY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1rSpG\",\"title\":\"Container_title__2Z5-k\"};"],"sourceRoot":""}