{"version":3,"sources":["components/authForm/AuthForm.js","pages/AuthPage.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/authForm/AuthForm.module.css"],"names":["AuthForm","handleSubmit","btnName","useState","name","setName","email","setEmail","password","setPassword","onChange","e","target","type","value","onSubmit","preventDefault","autoComplete","placeholder","required","className","styles","input","btn","SignupPage","dispatch","useDispatch","pathname","useLocation","userData","usersSignup","usersLogin","mainRoutes","filter","restricted","map","path","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","unsupportedIterableToArray","TypeError","module","exports"],"mappings":"wNA+EeA,EA3EE,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,QAChC,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAW,SAACC,GAChB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACL,SAATD,GAAmBR,EAAQS,GAClB,UAATD,GAAoBN,EAASO,GACpB,aAATD,GAAuBJ,EAAYK,IAcrC,OACE,uBAAMC,SANS,SAACJ,GAChBA,EAAEK,iBACFf,EAAa,CAAEG,OAAME,QAAOE,aAP5BH,EAAQ,IACRE,EAAS,IACTE,EAAY,KASZ,UACe,YAAZP,GACC,0CACQ,IACN,uBACEW,KAAK,OACLI,aAAa,MACbC,YAAY,eACZR,SAAUA,EACVI,MAAOV,EACPe,UAAQ,EACRC,UAAWC,IAAOC,WAIxB,2CACS,IACP,uBACET,KAAK,QACLI,aAAa,MACbC,YAAY,eACZR,SAAUA,EACVI,MAAOR,EACPa,UAAQ,EACRC,UAAWC,IAAOC,WAGtB,8CACY,IACV,uBACET,KAAK,WACLI,aAAa,MACbC,YAAY,eACZR,SAAUA,EACVI,MAAON,EACPW,UAAQ,EACRC,UAAWC,IAAOC,WAGtB,wBAAQT,KAAK,SAASO,UAAWC,IAAOE,IAAxC,SACGrB,Q,OC3CMsB,UAlBI,WACjB,IAAMC,EAAWC,cACTC,EAAaC,cAAbD,SACF1B,EAAe,SAAC4B,GAEhBJ,EADS,YAAbE,EACaG,YAAYD,GACZE,YAAWF,KAE1B,OAAOG,IACJC,QAAO,qBAAGC,cACVC,KACC,gBAAGC,EAAH,EAAGA,KAAMhC,EAAT,EAASA,KAAT,OACEgC,IAAST,GACP,cAAC,EAAD,CAAU1B,aAAcA,EAAcC,QAASE,GAAWgC,Q,8EChBrD,SAASC,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGpC,QAETyB,GAAKM,EAAKU,SAAWhB,GAH8CO,GAAK,IAK9E,MAAOU,GACPT,GAAK,EACLC,EAAKQ,EACL,QACA,IACOV,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAkB,EAAA,GAA2BnB,EAAKC,IGLjF,WACb,MAAM,IAAImB,UAAU,6IHIgF,K,mBIJtGC,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,IAAM","file":"static/js/AuthPage.41e30603.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./AuthForm.module.css\";\r\n\r\nconst AuthForm = ({ handleSubmit, btnName }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const onChange = (e) => {\r\n    const { type, value } = e.target;\r\n    type === \"text\" && setName(value);\r\n    type === \"email\" && setEmail(value);\r\n    type === \"password\" && setPassword(value);\r\n  };\r\n\r\n  const formReset = () => {\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleSubmit({ name, email, password });\r\n    formReset();\r\n  };\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      {btnName === \"Sign up\" && (\r\n        <label>\r\n          name:{\" \"}\r\n          <input\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"type here...\"\r\n            onChange={onChange}\r\n            value={name}\r\n            required\r\n            className={styles.input}\r\n          />\r\n        </label>\r\n      )}\r\n      <label>\r\n        email:{\" \"}\r\n        <input\r\n          type=\"email\"\r\n          autoComplete=\"off\"\r\n          placeholder=\"type here...\"\r\n          onChange={onChange}\r\n          value={email}\r\n          required\r\n          className={styles.input}\r\n        />\r\n      </label>\r\n      <label>\r\n        password:{\" \"}\r\n        <input\r\n          type=\"password\"\r\n          autoComplete=\"off\"\r\n          placeholder=\"type here...\"\r\n          onChange={onChange}\r\n          value={password}\r\n          required\r\n          className={styles.input}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={styles.btn}>\r\n        {btnName}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nAuthForm.propTypes = {\r\n  handleSubmit: PropTypes.func,\r\n  btnName: PropTypes.string,\r\n};\r\n\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { mainRoutes } from \"../routes/mainRoutes\";\r\nimport { usersLogin, usersSignup } from \"../redux/users/usersOperations\";\r\nimport AuthForm from \"../components/authForm/AuthForm\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst SignupPage = () => {\r\n  const dispatch = useDispatch();\r\n  const { pathname } = useLocation();\r\n  const handleSubmit = (userData) => {\r\n    pathname === \"/signup\"\r\n      ? dispatch(usersSignup(userData))\r\n      : dispatch(usersLogin(userData));\r\n  };\r\n  return mainRoutes\r\n    .filter(({ restricted }) => restricted)\r\n    .map(\r\n      ({ path, name }) =>\r\n        path === pathname && (\r\n          <AuthForm handleSubmit={handleSubmit} btnName={name} key={path} />\r\n        )\r\n    );\r\n};\r\n\r\nexport default SignupPage;\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"AuthForm_input__20IV7\",\"btn\":\"AuthForm_btn__3BfQH\"};"],"sourceRoot":""}